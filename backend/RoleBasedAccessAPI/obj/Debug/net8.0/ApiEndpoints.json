[
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.AuditLogsController",
    "Method": "GetAuditLogs",
    "RelativePath": "api/AuditLogs/GetAuditLogs",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "RoleBasedAccessAPI.Data.Model.SelectAuditLogs",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.AuditLogsController",
    "Method": "GetUserAuditLogs",
    "RelativePath": "api/AuditLogs/GetUserAuditLogs",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "RoleBasedAccessAPI.Data.Model.GetUserAuditLogs",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.AuthController",
    "Method": "GetButtonVisibility",
    "RelativePath": "api/Auth/ButtonVisibility",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "buttonVisibilityDto",
        "Type": "RoleBasedAccessAPI.Data.Model.ButtonVisibility",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "RoleBasedAccessAPI.Data.Model.UserLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.AuthController",
    "Method": "UpdatePassword",
    "RelativePath": "api/Auth/UpdatePassword",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatePasswordDto",
        "Type": "RoleBasedAccessAPI.Data.Model.UpdateUserPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "Get_sp_select_employees",
    "RelativePath": "api/Employee/GetAllEmployees",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "GetEmployeeDetailsAsync",
    "RelativePath": "api/Employee/GetEmployeeDetails",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RoleBasedAccessAPI.Data.Model.GetEmployeeDetail",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "GetProject",
    "RelativePath": "api/Employee/GetProject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "RoleBasedAccessAPI.Data.Model.GetProject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "GetProjects",
    "RelativePath": "api/Employee/GetProjects",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "RoleBasedAccessAPI.Data.Model.GetProjects",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "InsertEmployee",
    "RelativePath": "api/Employee/InsertEmployee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "insertEmployeeDto",
        "Type": "RoleBasedAccessAPI.Data.Model.InsertEmployee",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "SearchEmployees",
    "RelativePath": "api/Employee/SearchEmployee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "SelectTimesheet",
    "RelativePath": "api/Employee/selectTimesheet",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "selectTimesheetDto",
        "Type": "RoleBasedAccessAPI.Data.Model.SelectTimesheet",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "UpdateEmployee",
    "RelativePath": "api/Employee/updateEmployee",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateEmployeeDto",
        "Type": "RoleBasedAccessAPI.Data.Model.UpdateEmployee",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.EmployeeController",
    "Method": "UpdateProjectMapping",
    "RelativePath": "api/Employee/updateProjectMapping",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateMappingDto",
        "Type": "RoleBasedAccessAPI.Data.Model.UpdateProjectMapping",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.ProjectController",
    "Method": "InsertEmployee",
    "RelativePath": "api/Project/InsertProject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "RoleBasedAccessAPI.Data.Model.AddProject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.ProjectController",
    "Method": "ProjectMappingUpdateList",
    "RelativePath": "api/Project/projectMappingUpdateList",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectMappingListDto",
        "Type": "RoleBasedAccessAPI.Data.Model.ProjectMappingList",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.ProjectController",
    "Method": "SelectProject",
    "RelativePath": "api/Project/selectProject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "selectProjectDto",
        "Type": "RoleBasedAccessAPI.Data.Model.SelectProject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RoleBasedAccessAPI.Controllers.ProjectController",
    "Method": "UpdateProject",
    "RelativePath": "api/Project/updateProject",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateProjectDto",
        "Type": "RoleBasedAccessAPI.Data.Model.UpdateProject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]